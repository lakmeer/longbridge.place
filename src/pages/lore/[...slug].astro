---
import Layout from '@/layouts/Layout.astro'
import Title from '@/components/Title.astro'

import { getCollection } from 'astro:content'
import { entryUrl } from '@utils'

export async function getStaticPaths() {
  const lore = await getCollection('lore')
  return lore.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}


// This entry

const { entry } = Astro.props
const { Content } = await entry.render()

const tags = entry.data.tags


// Entries with same tags

const related = (await getCollection('lore', ({ data }) => {
  return data.tags.some((tag) => tags.includes(tag))
})).filter((e) => e.data.title !== entry.data.title)

// TODO: Filter out entries that have been fully embedded with Embed.Article
// TODO: Collect linked entries from body

---
<Layout title={entry.data.title}>
  <div class="prose mx-auto">
    <h1 class="text-4xl font-title"> {entry.data.title} </h1>
    <Content />

    { related.length && <>
      <hr />
      <h3 class="text-lg font-title-lesser mb-4">Further Reading</h3>
      <ul>
      { related.map((e) => <li class="font-title-least"><a href={entryUrl(e)}>{e.data.title}</a></li>) }
      </ul>
    </> }
  </div>
</Layout>
