---
import { getEntry, type CollectionEntry } from 'astro:content'

import Card     from '@comp/Card.astro'
import MiniLink from '@comp/MiniLink.astro'

interface Props {
  chapter: CollectionEntry<'chapter'>
  link?: string
}

let { chapter } = Astro.props

const thread = await getEntry(chapter.data.thread)
const author = await getEntry(chapter.data.author)
---
<Card heading={thread.data.title + (chapter.data.number ? ' #' + chapter.data.number : '')} link=`/thread/${thread.id}`>
  <div class="grid gap-4">
    <div class="grid gap-2">
      <h3 class="font-title text-xl">{chapter.data.title}</h3>

      { chapter.data.synopsis && <p>{ chapter.data.synopsis }</p> }
    </div>

    <div class="grid grid-cols-2 gap-2">
      <dl>
        <dt>Author</dt>
        <dd>{author.data.name}</dd>

        <dt>Thread</dt>
        <dd>{thread.data.title}</dd>

        <dt>Word Count</dt>
        <dd>{chapter.body?.split(/\s+/).length ?? 0}</dd>
      </dl>

      <dl>
        <dt>Protagonist</dt>
        <dd><MiniLink ref={chapter.data.pov_char!} /></dd>

        { chapter.data.other_chars && <>
          <dt>Other Characters</dt>
          <dd class="grid">
            { chapter.data.other_chars.map((char) =>
              typeof char === "string"
                ? <span>{ char }</span>
                : <MiniLink class="block" ref={char} />)
            }
          </dd>
        </> }

        { chapter.data.locations && <>
          <dt>Locations</dt>
          <dd class="grid">
            { chapter.data.locations?.map((loc) => 
              <MiniLink class="block" ref={loc} />)
            }
          </dd>
        </> }

      </dl>
    </div>
  </div>
</Card>

<style>
  dt { font-weight: 500; font-family: var(--font-title); }
  dd + dt { margin-top: 0.5rem; }
</style>
